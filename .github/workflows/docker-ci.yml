# This is a basic workflow to help you get started with Actions
name: Docker Image CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Build Images And Backup
        id: buildAndPushImage
        uses: risfeng/docker-image-build-push-action@v1.0
        with:
          docker_file: './web'
          registry_url: 'registry.cn-hangzhou.aliyuncs.com'
          namespaces: 'dve_images'
          repository_name: 'phpmyadmin_web' 
          user_name: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}
          image_version: 'v1.0'
          
        
      - name: Deploy DVE
        run: | 
          ls
          pwd
          docker-compose up -d
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Check PoC Result
        run: curl http://127.0.0.1:8000/index.php
      - name: Check Service Availability
        run: |
          sleep 100
          npm init -f
          npm -v
          node -v
          sudo apt-get upgrade -y
          sudo apt-get nodejs -y
          sudo apt-get npm -y
          curl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh
          sudo bash nodesource_setup.sh
          sudo apt install nodejs -y
          sudo apt install build-essential -y
          echo "nice"
          npm -v
          node -v
          npm i puppeteer
          node ci/check_availability.js
          git config --local user.email "972844082@qq.com"
          git config --local user.name "xxxxxxxxzhang"
          git add ci/screenshots/
          git commit -m "CI push sreenshots back"

        
      - name: Recognize Exploit Traffic
        run: |
         cat ids/logs/conn.log
         cp -f ids/logs/notice.log ci/traffic_backup/notice.log
         git add ci/traffic_backup/
         git commit -m "CI push traffic back"

      - name: Components Security Scan - container scan
        run: docker build -t xxxxxxxxzhang/${{ matrix.image-name }}:1.0  -f ./${{ matrix.image-name }}/Dockerfile .
      - uses: anchore/scan-action@master
        with:
          image-reference: "xxxxxxxxzhang/${{ matrix.image-name }}:1.0"
          dockerfile-path: "./${{ matrix.image-name }}/Dockerfile"
          include-app-packages: true
          debug: true
      
      - name: Components Security Scan - anchore inline scan JSON results
        run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
      - name: Components Security Scan - show vulnerabilities log in human readable format
        run: jq -r '.vulnerabilities[] | "\(.vuln)\t\(.severity)\t\(.package)\t\(.package_name)\t\(.package_version)"' ./anchore-reports/vulnerabilities.json | sort -k2 | grep -v Negligible  
